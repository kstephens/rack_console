- if @is_class
  %dt Superclass:
  %dd= format_module(@superclass)
%dt Ancestors:
%dd
  - if (@ancestors || [ ]).empty?
    %span.none NONE
  - else
    %table.ancestors
      - @ancestors.each do | mod |
        %tr
          %td= format_module(mod)
- if @subclasses
  %dt Subclasses:
  %dd
    - if @subclasses.empty?
      %span.none NONE
    - else
      %table.subclasses
        - @subclasses.each do | mod |
          %tr
            %td= format_module(mod)
%dt Extended By:
%dd
  - if (@result_extended || [ ]).empty?
    %span.none NONE
  - else
    %table.extended_by
      - @result_extended.each do | mod |
        %tr
          %td= format_module(mod)
%dt Constants:
%dd
  - if (@constants || [ ]).empty?
    %span.none NONE
  - else
    %table.constants
      - @constants.each do | name, value |
        %tr.constant
          %td
            %tt=h name
          %td= format_module(value.class)
          %td= format_object(value, :inline)
%dt
  Methods:
%dd
  = haml :'console/methods_table', locals: locals.merge(methods: @methods)
